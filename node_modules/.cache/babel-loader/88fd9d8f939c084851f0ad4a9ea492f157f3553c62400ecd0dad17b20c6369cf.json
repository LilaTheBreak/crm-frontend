{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{createRoot}from\"react-dom/client\";import{BrowserRouter}from\"react-router-dom\";import App from\"./App\";import{GoogleOAuthProvider}from\"@react-oauth/google\";// ‚úÖ Use Render API if deployed, otherwise fallback to localhost\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||\"http://localhost:5000\";const Root=()=>{const[clientId,setClientId]=useState(null);const[error,setError]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{const fetchClientId=async()=>{const endpoint=`${API_BASE_URL}/api/config`;console.log(\"üîç Fetching Google Client ID from:\",endpoint);try{const response=await fetch(endpoint);if(!response.ok)throw new Error(`‚ùå ${response.statusText}`);const data=await response.json();if(!data.googleClientId)throw new Error(\"‚ö†Ô∏è Client ID not found.\");setClientId(data.googleClientId);console.log(\"‚úÖ Client ID loaded:\",data.googleClientId);}catch(err){console.error(\"‚ùå Failed to load Google Client ID:\",err);setError(err.message||\"Unexpected error\");}finally{setLoading(false);}};fetchClientId();},[]);if(loading)return/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDD04 Loading Google Auth...\"});if(error)return/*#__PURE__*/_jsxs(\"p\",{style:{color:\"red\"},children:[\"\\u26A0\\uFE0F \",error]});return/*#__PURE__*/_jsx(GoogleOAuthProvider,{clientId:clientId,children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(App,{})})});};const container=document.getElementById(\"root\");const root=createRoot(container);root.render(/*#__PURE__*/_jsx(Root,{}));","map":{"version":3,"names":["React","useEffect","useState","createRoot","BrowserRouter","App","GoogleOAuthProvider","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Root","clientId","setClientId","error","setError","loading","setLoading","fetchClientId","endpoint","console","log","response","fetch","ok","Error","statusText","data","json","googleClientId","err","message","children","style","color","container","document","getElementById","root","render"],"sources":["/Users/admin/Desktop/crm-frontend/src/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { GoogleOAuthProvider } from \"@react-oauth/google\";\n\n// ‚úÖ Use Render API if deployed, otherwise fallback to localhost\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\nconst Root = () => {\n    const [clientId, setClientId] = useState(null);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const fetchClientId = async () => {\n            const endpoint = `${API_BASE_URL}/api/config`;\n            console.log(\"üîç Fetching Google Client ID from:\", endpoint);\n\n            try {\n                const response = await fetch(endpoint);\n                if (!response.ok) throw new Error(`‚ùå ${response.statusText}`);\n                const data = await response.json();\n\n                if (!data.googleClientId) throw new Error(\"‚ö†Ô∏è Client ID not found.\");\n                setClientId(data.googleClientId);\n                console.log(\"‚úÖ Client ID loaded:\", data.googleClientId);\n            } catch (err) {\n                console.error(\"‚ùå Failed to load Google Client ID:\", err);\n                setError(err.message || \"Unexpected error\");\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchClientId();\n    }, []);\n\n    if (loading) return <p>üîÑ Loading Google Auth...</p>;\n    if (error) return <p style={{ color: \"red\" }}>‚ö†Ô∏è {error}</p>;\n\n    return (\n        <GoogleOAuthProvider clientId={clientId}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </GoogleOAuthProvider>\n    );\n};\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\nroot.render(<Root />);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAO,CAAAC,GAAG,KAAM,OAAO,CACvB,OAASC,mBAAmB,KAAQ,qBAAqB,CAEzD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,uBAAuB,CAElF,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACf,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC9C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACkB,OAAO,CAAEC,UAAU,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAqB,aAAa,CAAG,KAAAA,CAAA,GAAY,CAC9B,KAAM,CAAAC,QAAQ,CAAG,GAAGZ,YAAY,aAAa,CAC7Ca,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEF,QAAQ,CAAC,CAE3D,GAAI,CACA,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACJ,QAAQ,CAAC,CACtC,GAAI,CAACG,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,KAAKH,QAAQ,CAACI,UAAU,EAAE,CAAC,CAC7D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAElC,GAAI,CAACD,IAAI,CAACE,cAAc,CAAE,KAAM,IAAI,CAAAJ,KAAK,CAAC,yBAAyB,CAAC,CACpEZ,WAAW,CAACc,IAAI,CAACE,cAAc,CAAC,CAChCT,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEM,IAAI,CAACE,cAAc,CAAC,CAC3D,CAAE,MAAOC,GAAG,CAAE,CACVV,OAAO,CAACN,KAAK,CAAC,oCAAoC,CAAEgB,GAAG,CAAC,CACxDf,QAAQ,CAACe,GAAG,CAACC,OAAO,EAAI,kBAAkB,CAAC,CAC/C,CAAC,OAAS,CACNd,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAEDC,aAAa,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIF,OAAO,CAAE,mBAAOZ,IAAA,MAAA4B,QAAA,CAAG,qCAAyB,CAAG,CAAC,CACpD,GAAIlB,KAAK,CAAE,mBAAOR,KAAA,MAAG2B,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAF,QAAA,EAAC,eAAG,CAAClB,KAAK,EAAI,CAAC,CAE5D,mBACIV,IAAA,CAACF,mBAAmB,EAACU,QAAQ,CAAEA,QAAS,CAAAoB,QAAA,cACpC5B,IAAA,CAACJ,aAAa,EAAAgC,QAAA,cACV5B,IAAA,CAACH,GAAG,GAAE,CAAC,CACI,CAAC,CACC,CAAC,CAE9B,CAAC,CAED,KAAM,CAAAkC,SAAS,CAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CACjD,KAAM,CAAAC,IAAI,CAAGvC,UAAU,CAACoC,SAAS,CAAC,CAClCG,IAAI,CAACC,MAAM,cAACnC,IAAA,CAACO,IAAI,GAAE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}